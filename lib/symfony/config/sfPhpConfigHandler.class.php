<?php

/*
 * This file is part of the symfony package.
 * (c) 2004, 2005 Fabien Potencier <fabien.potencier@symfony-project.com>
 * 
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * sfPhpConfigHandler allows you to override php.ini configuration at runtime.
 *
 * @package    symfony
 * @subpackage config
 * @author     Fabien Potencier <fabien.potencier@symfony-project.com>
 * @version    SVN: $Id$
 */
class sfPhpConfigHandler extends sfYamlConfigHandler
{
  /**
   * Execute this configuration handler.
   *
   * @param string An absolute filesystem path to a configuration file.
   *
   * @return string Data to be written to a cache file.
   *
   * @throws <b>sfConfigurationException</b> If a requested configuration file does not exist or is not readable.
   * @throws <b>sfParseException</b> If a requested configuration file is improperly formatted.
   * @throws <b>sfInitializationException</b> If a php.yml key check fails.
   */
  public function & execute ($configFile, $param = array())
  {
    $this->initialize();

    // parse the yaml
    $config = $this->parseYaml($configFile);

    // init our data array
    $data = array();

    // get all php.ini configuration
    $configs = ini_get_all();

    // let's do our fancy work
    if (isset($config['set']))
    {
      foreach ($config['set'] as $key => &$value)
      {
        $key = strtolower($key);

        // key exists?
        if (!array_key_exists($key, $configs))
        {
          $error = 'Configuration file "%s" specifies key "%s" with is not a php.ini directive';
          $error = sprintf($error, $configFile, $key);

          throw new sfParseException($error);
        }

        // key is overridable?
        if ($configs[$key]['access'] != 7)
        {
          $error = 'Configuration file "%s" specifies key "%s" with cannot be overrided';
          $error = sprintf($error, $configFile, $key);

          throw new sfParseException($error);
        }

        // escape value
        $value = preg_replace('/\'/', '\\\'', $value);

        $tmp    = "ini_set('%s', '%s');";
        $data[] = sprintf($tmp, $key, $value);
      }
    }

    if (isset($config['check']))
    {
      foreach ($config['check'] as $key => &$value)
      {
        $key = strtolower($key);

        // key exists?
        if (!array_key_exists($key, $configs))
        {
          $error = 'Configuration file "%s" specifies key "%s" with is not a php.ini directive [err0002]';
          $error = sprintf($error, $configFile, $key);

          throw new sfParseException($error);
        }

        if (ini_get($key) != $value)
        {
          $error = 'Configuration file "%s" specifies that php.ini "%s" key must be set to "%s" [err0001]';
          $error = sprintf($error, $configFile, $key, $value);

          throw new sfInitializationException($error);
        }
      }
    }

    // compile data
    $retval = "<?php\n".
              "// auth-generated by sfPhpConfigHandler\n".
              "// date: %s\n%s\n?>";
    $retval = sprintf($retval, date('m/d/Y H:i:s'), implode("\n", $data));

    return $retval;
  }
}

?>