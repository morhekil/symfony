<?php

/*
 * This file is part of the symfony package.
 * (c) 2004, 2005 Fabien Potencier <fabien.potencier@gmail.com>
 * (c) 2004, 2005 Sean Kerr.
 * 
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * sfModuleConfigHandler reads module configuration files to determine the status
 * of a module.
 *
 * @package    symfony
 * @subpackage config
 * @author     Fabien Potencier <fabien.potencier@gmail.com>
 * @author     Sean Kerr <skerr@mojavi.org>
 * @version    SVN: $Id$
 */
class sfModuleConfigHandler extends sfYamlConfigHandler
{
  /**
   * Execute this configuration handler.
   *
   * @param string An absolute filesystem path to a configuration file.
   *
   * @return string Data to be written to a cache file.
   *
   * @throws <b>ConfigurationException</b> If a requested configuration file does not exist or is not readable.
   * @throws <b>ParseException</b> If a requested configuration file is improperly formatted.
   */
  public function & execute ($config)
  {
    // parse the ini
    $config = $this->parseYaml($configFile);

    // get our prefix
    $prefix = $this->getParameterHolder()->get('prefix', '');

    // get all configuration
    if (isset($config['all']))
    {
      $allConfig = $config['all'];
    }
    if (!isset($allConfig))
    {
      $allConfig = array();
    }

    // merge with environment configuration if needed
    if (isset($config[SF_ENVIRONMENT]) && is_array($config[SF_ENVIRONMENT]))
    {
      $myConfig = sfToolkit::array_deep_merge($myConfig, $config[SF_ENVIRONMENT]);
    }

    // init our data array
    $data = array();

    if (isset($myConfig['activate']))
    {
      $tmp = "@define('%s', %s);";
      $data[] = sprintf($tmp, strtoupper(''), $myConfig['activate'] ? 1 : 0);
   }

    // compile data
    $retval = "<?php\n".
              "// auth-generated by sfModuleConfigHandler\n".
              "// date: %s\n%s\n?>";

    $retval = sprintf($retval, date('m/d/Y H:i:s'), implode("\n", $data));

    return $retval;
  }
}

?>